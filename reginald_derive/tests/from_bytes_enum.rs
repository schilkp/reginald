use reginald_derive::FromBytes;

#[derive(Debug, PartialEq, FromBytes)]
#[reginald(width_bytes = 1)]
enum E {
    Variant0 = 0,
    Variant1 = 1,
    Variant2 = 2,
    Variant3 = 3,
    Variant4 = 4,
    Variant5 = 5,
    Variant6 = 6,
    Variant7 = 7,
    Variant8 = 8,
    Variant9 = 9,
    Variant10 = 10,
    Variant11 = 11,
    Variant12 = 12,
    Variant13 = 13,
    Variant14 = 14,
    Variant15 = 15,
    Variant16 = 16,
    Variant17 = 17,
    Variant18 = 18,
    Variant19 = 19,
    Variant20 = 20,
    Variant21 = 21,
    Variant22 = 22,
    Variant23 = 23,
    Variant24 = 24,
    Variant25 = 25,
    Variant26 = 26,
    Variant27 = 27,
    Variant28 = 28,
    Variant29 = 29,
    Variant30 = 30,
    Variant31 = 31,
    Variant32 = 32,
    Variant33 = 33,
    Variant34 = 34,
    Variant35 = 35,
    Variant36 = 36,
    Variant37 = 37,
    Variant38 = 38,
    Variant39 = 39,
    Variant40 = 40,
    Variant41 = 41,
    Variant42 = 42,
    Variant43 = 43,
    Variant44 = 44,
    Variant45 = 45,
    Variant46 = 46,
    Variant47 = 47,
    Variant48 = 48,
    Variant49 = 49,
    Variant50 = 50,
    Variant51 = 51,
    Variant52 = 52,
    Variant53 = 53,
    Variant54 = 54,
    Variant55 = 55,
    Variant56 = 56,
    Variant57 = 57,
    Variant58 = 58,
    Variant59 = 59,
    Variant60 = 60,
    Variant61 = 61,
    Variant62 = 62,
    Variant63 = 63,
    Variant64 = 64,
    Variant65 = 65,
    Variant66 = 66,
    Variant67 = 67,
    Variant68 = 68,
    Variant69 = 69,
    Variant70 = 70,
    Variant71 = 71,
    Variant72 = 72,
    Variant73 = 73,
    Variant74 = 74,
    Variant75 = 75,
    Variant76 = 76,
    Variant77 = 77,
    Variant78 = 78,
    Variant79 = 79,
    Variant80 = 80,
    Variant81 = 81,
    Variant82 = 82,
    Variant83 = 83,
    Variant84 = 84,
    Variant85 = 85,
    Variant86 = 86,
    Variant87 = 87,
    Variant88 = 88,
    Variant89 = 89,
    Variant90 = 90,
    Variant91 = 91,
    Variant92 = 92,
    Variant93 = 93,
    Variant94 = 94,
    Variant95 = 95,
    Variant96 = 96,
    Variant97 = 97,
    Variant98 = 98,
    Variant99 = 99,
    Variant100 = 100,
    Variant101 = 101,
    Variant102 = 102,
    Variant103 = 103,
    Variant104 = 104,
    Variant105 = 105,
    Variant106 = 106,
    Variant107 = 107,
    Variant108 = 108,
    Variant109 = 109,
    Variant110 = 110,
    Variant111 = 111,
    Variant112 = 112,
    Variant113 = 113,
    Variant114 = 114,
    Variant115 = 115,
    Variant116 = 116,
    Variant117 = 117,
    Variant118 = 118,
    Variant119 = 119,
    Variant120 = 120,
    Variant121 = 121,
    Variant122 = 122,
    Variant123 = 123,
    Variant124 = 124,
    Variant125 = 125,
    Variant126 = 126,
    Variant127 = 127,
    Variant128 = 128,
    Variant129 = 129,
    Variant130 = 130,
    Variant131 = 131,
    Variant132 = 132,
    Variant133 = 133,
    Variant134 = 134,
    Variant135 = 135,
    Variant136 = 136,
    Variant137 = 137,
    Variant138 = 138,
    Variant139 = 139,
    Variant140 = 140,
    Variant141 = 141,
    Variant142 = 142,
    Variant143 = 143,
    Variant144 = 144,
    Variant145 = 145,
    Variant146 = 146,
    Variant147 = 147,
    Variant148 = 148,
    Variant149 = 149,
    Variant150 = 150,
    Variant151 = 151,
    Variant152 = 152,
    Variant153 = 153,
    Variant154 = 154,
    Variant155 = 155,
    Variant156 = 156,
    Variant157 = 157,
    Variant158 = 158,
    Variant159 = 159,
    Variant160 = 160,
    Variant161 = 161,
    Variant162 = 162,
    Variant163 = 163,
    Variant164 = 164,
    Variant165 = 165,
    Variant166 = 166,
    Variant167 = 167,
    Variant168 = 168,
    Variant169 = 169,
    Variant170 = 170,
    Variant171 = 171,
    Variant172 = 172,
    Variant173 = 173,
    Variant174 = 174,
    Variant175 = 175,
    Variant176 = 176,
    Variant177 = 177,
    Variant178 = 178,
    Variant179 = 179,
    Variant180 = 180,
    Variant181 = 181,
    Variant182 = 182,
    Variant183 = 183,
    Variant184 = 184,
    Variant185 = 185,
    Variant186 = 186,
    Variant187 = 187,
    Variant188 = 188,
    Variant189 = 189,
    Variant190 = 190,
    Variant191 = 191,
    Variant192 = 192,
    Variant193 = 193,
    Variant194 = 194,
    Variant195 = 195,
    Variant196 = 196,
    Variant197 = 197,
    Variant198 = 198,
    Variant199 = 199,
    Variant200 = 200,
    Variant201 = 201,
    Variant202 = 202,
    Variant203 = 203,
    Variant204 = 204,
    Variant205 = 205,
    Variant206 = 206,
    Variant207 = 207,
    Variant208 = 208,
    Variant209 = 209,
    Variant210 = 210,
    Variant211 = 211,
    Variant212 = 212,
    Variant213 = 213,
    Variant214 = 214,
    Variant215 = 215,
    Variant216 = 216,
    Variant217 = 217,
    Variant218 = 218,
    Variant219 = 219,
    Variant220 = 220,
    Variant221 = 221,
    Variant222 = 222,
    Variant223 = 223,
    Variant224 = 224,
    Variant225 = 225,
    Variant226 = 226,
    Variant227 = 227,
    Variant228 = 228,
    Variant229 = 229,
    Variant230 = 230,
    Variant231 = 231,
    Variant232 = 232,
    Variant233 = 233,
    Variant234 = 234,
    Variant235 = 235,
    Variant236 = 236,
    Variant237 = 237,
    Variant238 = 238,
    Variant239 = 239,
    Variant240 = 240,
    Variant241 = 241,
    Variant242 = 242,
    Variant243 = 243,
    Variant244 = 244,
    Variant245 = 245,
    Variant246 = 246,
    Variant247 = 247,
    Variant248 = 248,
    Variant249 = 249,
    Variant250 = 250,
    Variant251 = 251,
    Variant252 = 252,
    Variant253 = 253,
    Variant254 = 254,
    Variant255 = 255,
}

#[cfg(test)]
mod tests {
    use super::*;
    use reginald::FromBytes;

    #[test]
    fn from_bytes_masked() {
        assert_eq!(E::Variant0, E::from_le_bytes(&[0]));
        assert_eq!(E::Variant100, E::from_le_bytes(&[100]));
        assert_eq!(E::Variant255, E::from_le_bytes(&[255]));
    }
}
