{
  map_name: "LSM6DSV16BX",
  default_register_bitwidth: 8,

  registers: {

    FUNC_CFG_ACCESS: {
      Register: {
        adr: 1,
        reset_val: 0,
        always_write: {
          mask: 115,
          val: 0
        },
        fields: {
          SW_POR: {
            bits: [2]
            access: ["R", "W"]
          },
          FSM_WR_CTRL_EN: {
            bits: [3]
            access: ["R", "W"]
          },
          EMB_FUNC_REG_ACCESS: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    PIN_CTRL: {
      Register: {
        adr: 2,
        reset_val: 35,
        always_write: {
          mask: 31,
          val: 3
        },
        fields: {
          IBHR_POR_EN: {
            bits: [5]
            access: ["R", "W"]
          },
          SDO_PU_EN: {
            bits: [6]
            access: ["R", "W"]
          },
          TDM_WCLK_PU_DIS: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    IF_CFG: {
      Register: {
        adr: 3,
        reset_val: 0,
        always_write: {
          mask: 2,
          val: 0
        },
        fields: {
          I2C_I3C_DISABLE: {
            bits: [0]
            access: ["R", "W"]
          },
          SIM: {
            bits: [2]
            access: ["R", "W"],
            brief: "SPI serial interface mode selection.",
            accepts: {
              LocalEnum: {
                4WIRE: {
                  val: 0,
                  brief: "4-wire interface."
                },
                3WIRE: {
                  val: 1,
                  brief: "3-wire interface."
                }
              }
            }
          },
          PP_OD: {
            bits: [3]
            access: ["R", "W"],
            brief: "Push-pull/open-drain selection on INT1 and INT2 pins.",
            accepts: {
              LocalEnum: {
                PUSH_PULL: {
                  val: 0,
                  brief: "Push-pull mode."
                },
                OPEN_DRAIN: {
                  val: 1,
                  brief: "Open-drain mode."
                }
              }
            }
          },
          H_LACTIVE: {
            bits: [4]
            access: ["R", "W"],
            brief: "INT1/INT2 active level.",
            accepts: {
              LocalEnum: {
                HIGH: {
                  val: 0,
                  brief: "Interrupt output pins active high."
                },
                LOW: {
                  val: 1,
                  brief: "Interrupt output pins active low."
                }
              }
            }
          },
          ASF_CTRL: {
            bits: [5]
            access: ["R", "W"]
          },
          TDM_OUT_PU_EN: {
            bits: [6]
            access: ["R", "W"]
          },
          SDA_PU_EN: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    FIFO_CTRL1: {
      Register: {
        adr: 7,
        reset_val: 0,
        fields: {
          WTM: {
            bits: ["7-0"]
            access: ["R", "W"]
          }
        }
      }
    },

    FIFO_CTRL2: {
      Register: {
        adr: 8,
        reset_val: 0,
        always_write: {
          mask: 40,
          val: 0
        },
        fields: {
          XL_DUALC_BATCH_FROM_FSM: {
            bits: [0]
            access: ["R", "W"]
          },
          UNCOMPR_RATE: {
            bits: ["2-1"]
            access: ["R", "W"]
          },
          ODR_CHG_EN: {
            bits: [4]
            access: ["R", "W"]
          },
          FIFO_COMPR_RT_EN: {
            bits: [6]
            access: ["R", "W"]
          },
          STOP_ON_WTM: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    FIFO_CTRL3: {
      Register: {
        adr: 9,
        reset_val: 0,
        fields: {
          BDR_XL: {
            bits: ["3-0"]
            access: ["R", "W"],
            accepts: {
              SharedEnum: "BDR_GY_XL"
            }
          },
          BDR_GY: {
            bits: ["7-4"]
            access: ["R", "W"],
            accepts: {
              SharedEnum: "BDR_GY_XL"
            }
          }
        }
      }
    },

    FIFO_CTRL4: {
      Register: {
        adr: 10,
        reset_val: 0,
        always_write: {
          mask: 8,
          val: 0
        },
        fields: {
          FIFO_MODE: {
            bits: ["2-0"]
            access: ["R", "W"],
            brief: "FIFO Operating mode.",
            accepts: {
              LocalEnum: {
                BYPASS: {
                  val: 0,
                  brief: "Disabled and flushed."
                },
                FIFO: {
                  val: 1,
                  brief: "FIFO enabled. Stop collection when FIFO full."
                },
                CONTINOUS: {
                  val: 6,
                  brief: "FIFO enabled. If the FIFO is full, new samples overwrite the older ones."
                }
              }
            }
          },
          ODR_T_BATCH: {
            bits: ["5-4"]
            access: ["R", "W"]
          },
          DEC_TS_BATCH: {
            bits: ["7-6"]
            access: ["R", "W"],
            brief: "Selects decimation for timestamp batching in FIFO.",
            doc: "Write rate is the maximum rate between the accelerometer and gyroscope BDR divided by decimation decoder.",
            accepts: {
              LocalEnum: {
                OFF: {
                  val: 0,
                  brief: "Timestamp not batched in FIFO"
                },
                DEC1: {
                  val: 1,
                  brief: "Decimation 1. Timestamp freq = max(BDR_XL[Hz],BDR_GY[Hz]) [Hz];"
                },
                DEC8: {
                  val: 2,
                  brief: "Decimation 8. Timestamp freq = max(BDR_XL[Hz],BDR_GY[Hz])/8 [Hz];"
                },
                DEC32: {
                  val: 3,
                  brief: "Decimation 32. Timestamp freq = max(BDR_XL[Hz],BDR_GY[Hz])/32 [Hz])"
                }
              }
            }
          }
        }
      }
    },

    COUNTER_BDR_REG1: {
      Register: {
        adr: 11,
        reset_val: 0,
        always_write: {
          mask: 152,
          val: 0
        },
        fields: {
          CNT_BDR_TH: {
            bits: ["1-0"]
            access: ["R", "W"]
          },
          AH_QVAR_BATCH_EN: {
            bits: [2]
            access: ["R", "W"]
          },
          TRIG_COUNTER_BDR: {
            bits: ["6-5"]
            access: ["R", "W"]
          }
        }
      }
    },

    COUNTER_BDR_REG2: {
      Register: {
        adr: 12,
        reset_val: 0,
        fields: {
          CNT_BDR_TH: {
            bits: ["7-0"]
            access: ["R", "W"]
          }
        }
      }
    },

    INT1_CTRL: {
      Register: {
        adr: 13,
        reset_val: 0,
        always_write: {
          mask: 132,
          val: 0
        },
        fields: {
          INT1_DRDY_XL: {
            bits: [0]
            access: ["R", "W"]
          },
          INT1_DRDY_G: {
            bits: [1]
            access: ["R", "W"]
          },
          INT1_FIFO_TH: {
            bits: [3]
            access: ["R", "W"]
          },
          INT1_FIFO_OVR: {
            bits: [4]
            access: ["R", "W"]
          },
          INT1_FIFO_FULL: {
            bits: [5]
            access: ["R", "W"]
          },
          INT1_CNT_BDR: {
            bits: [6]
            access: ["R", "W"]
          }
        }
      }
    },

    INT2_CTRL: {
      Register: {
        adr: 14,
        reset_val: 0,
        always_write: {
          mask: 4,
          val: 0
        },
        fields: {
          INT2_DRDY_XL: {
            bits: [0]
            access: ["R", "W"]
          },
          INT2_DRDY_G: {
            bits: [1]
            access: ["R", "W"]
          },
          INT2_FIFO_TH: {
            bits: [3]
            access: ["R", "W"]
          },
          INT2_FIFO_OVR: {
            bits: [4]
            access: ["R", "W"]
          },
          INT2_FIFO_FULL: {
            bits: [5]
            access: ["R", "W"]
          },
          INT2_CNT_BDR: {
            bits: [6]
            access: ["R", "W"]
          },
          INT2_EMB_FUNC_ENDOP: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    WHO_AM_I: {
      Register: {
        adr: 15,
        reset_val: 113,
        fields: {
          ID: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    CTRL1: {
      Register: {
        adr: 16,
        reset_val: 0,
        always_write: {
          mask: 128,
          val: 0
        },
        fields: {
          ODR_XL: {
            bits: ["3-0"]
            access: ["R", "W"],
            accepts: {
              LocalEnum: {
                POWER_DOWN: {
                  val: 0,
                  brief: "Power-down"
                },
                1HZ875: {
                  val: 1,
                  brief: "1.875 Hz (Available in low-power mode)"
                },
                7HZ5: {
                  val: 2,
                  brief: "7.5 Hz (Available in high-performance mode)"
                },
                15HZ: {
                  val: 3,
                  brief: "15 Hz (Available in low-power, high-performance mode)"
                },
                30HZ: {
                  val: 4,
                  brief: "30 Hz (Available in low-power, high-performance mode)"
                },
                60HZ: {
                  val: 5,
                  brief: "60 Hz (Available in low-power, high-performance mode)"
                },
                120HZ: {
                  val: 6,
                  brief: "120 Hz (Available in low-power, high-performance mode)"
                },
                240HZ: {
                  val: 7,
                  brief: "240 Hz (Available in low-power, high-performance mode)"
                },
                480HZ: {
                  val: 8,
                  brief: "480 Hz (Available in high-performance mode)"
                },
                960HZ: {
                  val: 9,
                  brief: "960 Hz (Available in high-performance mode)"
                },
                1920HZ: {
                  val: 10,
                  brief: "1.92 kHz (Available in high-performance mode)"
                },
                3840HZ: {
                  val: 11,
                  brief: "3.84 kHz (Available in high-performance mode)"
                },
                7680HZ: {
                  val: 12,
                  brief: "7.68 kHz (Available in high-performance mode)"
                }
              }
            }
          },
          OP_MODE_XL: {
            bits: ["6-4"]
            access: ["R", "W"],
            accepts: {
              LocalEnum: {
                HIGH_PERF: {
                  val: 0,
                  brief: "High-performance mode."
                },
                HIGH_PERF_TDM: {
                  val: 2,
                  brief: "High-performance mode + TDM."
                },
                LOW_PWR_2MEAN: {
                  val: 4,
                  brief: "Low-power mode with 2-mean averaging."
                },
                LOW_PWR_4MEAN: {
                  val: 5,
                  brief: "Low-power mode with 4-mean averaging."
                },
                LOW_PWR_8MEAN: {
                  val: 6,
                  brief: "Low-power mode with 8-mean averaging."
                }
              }
            }
          }
        }
      }
    },

    CTRL2: {
      Register: {
        adr: 17,
        reset_val: 0,
        always_write: {
          mask: 128,
          val: 0
        },
        fields: {
          ODR_G: {
            bits: ["3-0"]
            access: ["R", "W"],
            accepts: {
              LocalEnum: {
                POWER_DOWN: {
                  val: 0,
                  brief: "Power-down"
                },
                7HZ5: {
                  val: 2,
                  brief: "7.5 Hz (Available in high-performance mode)"
                },
                15HZ: {
                  val: 3,
                  brief: "15 Hz (Available in low-power, high-performance mode)"
                },
                30HZ: {
                  val: 4,
                  brief: "30 Hz (Available in low-power, high-performance mode)"
                },
                60HZ: {
                  val: 5,
                  brief: "60 Hz (Available in low-power, high-performance mode)"
                },
                120HZ: {
                  val: 6,
                  brief: "120 Hz (Available in low-power, high-performance mode)"
                },
                240HZ: {
                  val: 7,
                  brief: "240 Hz (Available in low-power, high-performance mode)"
                },
                480HZ: {
                  val: 8,
                  brief: "480 Hz (Available in high-performance mode)"
                },
                960HZ: {
                  val: 9,
                  brief: "960 Hz (Available in high-performance mode)"
                },
                1920HZ: {
                  val: 10,
                  brief: "1.92 kHz (Available in high-performance mode)"
                },
                3840HZ: {
                  val: 11,
                  brief: "3.84 kHz (Available in high-performance mode)"
                },
                7680HZ: {
                  val: 12,
                  brief: "7.68 kHz (Available in high-performance mode)"
                }
              }
            }
          },
          OP_MODE_G: {
            bits: ["6-4"]
            access: ["R", "W"],
            accepts: {
              LocalEnum: {
                HIGH_PERF: {
                  val: 0,
                  brief: "High-performance mode."
                },
                LOW_PWR: {
                  val: 5,
                  brief: "Low-power mode."
                },
                SLEEP: {
                  val: 4,
                  brief: "Sleep mode."
                }
              }
            }
          }
        }
      }
    },

    CTRL3: {
      Register: {
        adr: 18,
        reset_val: 68,
        always_write: {
          mask: 58,
          val: 0
        },
        fields: {
          SW_RESET: {
            bits: [0]
            access: ["R", "W"]
          },
          IF_INC: {
            bits: [2]
            access: ["R", "W"]
          },
          BDU: {
            bits: [6]
            access: ["R", "W"]
          },
          BOOT: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    CTRL4: {
      Register: {
        adr: 19,
        reset_val: 0,
        always_write: {
          mask: 224,
          val: 0
        },
        fields: {
          DRDY_PULSED: {
            bits: [1]
            access: ["R", "W"],
            accepts: {
              LocalEnum: {
                PULSED: {
                  val: 1,
                  brief: "DRDY pulse 75us long"
                },
                LATCHED: {
                  val: 0,
                  brief: "DRDY high until output register MSB read."
                }
              }
            }
          },
          INT2_DRDY_TEMP: {
            bits: [2]
            access: ["R", "W"]
          },
          DRDY_MASK: {
            bits: [3]
            access: ["R", "W"]
          },
          INT2_ON_INT1: {
            bits: [4]
            access: ["R", "W"]
          }
        }
      }
    },

    CTRL5: {
      Register: {
        adr: 20,
        reset_val: 0,
        always_write: {
          mask: 248,
          val: 0
        },
        fields: {
          INT_EN_I3C: {
            bits: [0]
            access: ["R", "W"]
          },
          BUS_ACT_SEL: {
            bits: ["2-1"]
            access: ["R", "W"]
          }
        }
      }
    },

    CTRL6: {
      Register: {
        adr: 21,
        reset_val: 0,
        always_write: {
          mask: 128,
          val: 0
        },
        fields: {
          FS_G: {
            bits: ["3-0"]
            access: ["R", "W"],
            brief: "Gyroscope full-scale range.",
            accepts: {
              LocalEnum: {
                125DPS: {
                  val: 0,
                  brief: "±125 dps"
                },
                250DPS: {
                  val: 1,
                  brief: "±250 dps"
                },
                500DPS: {
                  val: 2,
                  brief: "±500 dps"
                },
                1000DPS: {
                  val: 3,
                  brief: "±1000 dps"
                },
                2000DPS: {
                  val: 4,
                  brief: "±2000 dps"
                },
                4000DPS: {
                  val: 12,
                  brief: "±4000 dps"
                }
              }
            }
          },
          LPF1_G_BW: {
            bits: ["6-4"]
            access: ["R", "W"],
            brief: "Gyroscope LFP1 Bandwidth selection",
            doc:
              '''
              Filter bandwith in Hz at given LPF1_G_BW settings / sample rates:
              | **LPF1_G_BW** | **ODR=60Hz** | **ODR=120Hz** | **ODR=240Hz** | **ODR=480Hz** | **ODR=960Hz** | **ODR=1.9200kHz** | **ODR=3.8400kHz** | **ODR=7.6800kHz** |
              |---------------|--------------|---------------|---------------|---------------|---------------|-------------------|-------------------|-------------------|
              | 0             | N.A.         | N.A.          | N.A.          | 174           | 353           | 273               | 280               | 282               |
              | 1             | N.A.         | N.A.          | N.A.          | 157           | 194           | 209               | 211               | 212               |
              | 2             | N.A.         | N.A.          | N.A.          | 131           | 148           | 154               | 156               | 156               |
              | 3             | N.A.         | N.A.          | N.A.          | 186           | 313           | 405               | 428               | 434               |
              | 4             | N.A.         | N.A.          | 78            | 94            | 99            | 101               | 102               | 102               |
              | 5             | N.A.         | 43            | 53            | 57            | 58            | 58                | 58                | 58                |
              | 6             | 18.0         | 24.2          | 27.3          | 28.4          | 28.7          | 28.8              | N.A.              | N.A.              |
              | 7             | 12.1         | 13.7          | 14.2          | 14.3          | 14.4          | 14.4              | N.A.              | N.A.              |
              '''
            accepts: {
              LocalEnum: {
                0: {
                  val: 0,
                  brief: "LPF1 setting 0"
                },
                1: {
                  val: 1,
                  brief: "LPF1 setting 1"
                },
                2: {
                  val: 2,
                  brief: "LPF1 setting 2"
                },
                3: {
                  val: 3,
                  brief: "LPF1 setting 3"
                },
                4: {
                  val: 4,
                  brief: "LPF1 setting 4"
                },
                5: {
                  val: 5,
                  brief: "LPF1 setting 5"
                },
                6: {
                  val: 6,
                  brief: "LPF1 setting 6"
                },
                7: {
                  val: 7,
                  brief: "LPF1 setting 7"
                }
              }
            }
          }
        }
      }
    },

    CTRL7: {
      Register: {
        adr: 22,
        reset_val: 0,
        always_write: {
          mask: 2,
          val: 0
        },
        fields: {
          LPF1_G_EN: {
            bits: [0]
            access: ["R", "W"]
          },
          AH_QVAR2_EN: {
            bits: [2]
            access: ["R", "W"]
          },
          AH_QVAR1_EN: {
            bits: [3]
            access: ["R", "W"]
          },
          AH_QVAR_C_ZIN: {
            bits: ["5-4"]
            access: ["R", "W"],
            brief: "QVAR Input Impedance",
            accepts: {
              LocalEnum: {
                2400M: {
                  val: 0,
                  brief: "2.4GΩ"
                },
                730M: {
                  val: 1,
                  brief: "730MΩ;"
                },
                300M: {
                  val: 2,
                  brief: "300MΩ;"
                },
                235M: {
                  val: 3,
                  brief: "235MΩ"
                }
              }
            }
          },
          INT2_DRDY_AH_QVAR: {
            bits: [6]
            access: ["R", "W"]
          },
          AH_QVAR_EN: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    CTRL8: {
      Register: {
        adr: 23,
        reset_val: 0,
        always_write: {
          mask: 4,
          val: 0
        },
        fields: {
          FS_XL: {
            bits: ["1-0"]
            access: ["R", "W"],
            brief: "Accelerometer full-scale range.",
            accepts: {
              LocalEnum: {
                2G: {
                  brief: "±2 g",
                  val: 0
                },
                4G: {
                  brief: "±4 g",
                  val: 1
                },
                8G: {
                  brief: "±8 g",
                  val: 2
                },
                16G: {
                  brief: "±16 g",
                  val: 3
                }
              }
            }
          },
          XL_DUALC_EN: {
            bits: [3]
            access: ["R", "W"]
          },
          AH_QVAR_HPF: {
            bits: [4]
            access: ["R", "W"]
          },
          HP_LPF2_XL_BW: {
            bits: ["7-5"]
            access: ["R", "W"]
          }
        }
      }
    },

    CTRL9: {
      Register: {
        adr: 24,
        reset_val: 0,
        always_write: {
          mask: 4,
          val: 0
        },
        fields: {
          USR_OFF_ON_OUT: {
            bits: [0]
            access: ["R", "W"]
          },
          USR_OFF_W: {
            bits: [1]
            access: ["R", "W"],
            brief: "Weight with which the user offset is applied.",
            accepts: {
              LocalEnum: {
                2_neg10: {
                  val: 0,
                  brief: "Offset has a weight of 2^-10g/LSB"
                },
                2_neg6: {
                  val: 1,
                  brief: "Offset has a weight of 2^-6g/LSB"
                }
              }
            }
          },
          LPF2_XL_EN: {
            bits: [3]
            access: ["R", "W"]
          },
          HP_SLOPE_XL_EN: {
            bits: [4]
            access: ["R", "W"]
          },
          XL_FASTSETTL_MODE: {
            bits: [5]
            access: ["R", "W"]
          },
          HP_REF_MODE_XL: {
            bits: [6]
            access: ["R", "W"]
          },
          AH_QVAR_LPF: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    CTRL10: {
      Register: {
        adr: 25,
        reset_val: 0,
        always_write: {
          mask: 128,
          val: 0
        },
        fields: {
          ST_XL: {
            bits: ["1-0"]
            access: ["R", "W"]
          },
          ST_G: {
            bits: ["3-2"]
            access: ["R", "W"]
          },
          XL_ST_OFFSET: {
            bits: [4]
            access: ["R", "W"]
          },
          AH_QVAR_SW: {
            bits: [5]
            access: ["R", "W"]
          },
          EMB_FUNC_DEBUG: {
            bits: [6]
            access: ["R", "W"]
          }
        }
      }
    },

    CTRL_STATUS: {
      Register: {
        adr: 26,
        always_write: {
          mask: 251,
          val: 0
        },
        fields: {
          FSM_WR_CTRL_STATUS: {
            bits: [2]
            access: ["R"]
          }
        }
      }
    },

    FIFO_STATUS1: {
      Register: {
        adr: 27,
        fields: {
          DIFF_FIFO: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    FIFO_STATUS2: {
      Register: {
        adr: 28,
        always_write: {
          mask: 6,
          val: 0
        },
        fields: {
          DIFF_FIFO: {
            bits: [0]
            access: ["R"]
          },
          FIFO_OVR_LATCHED: {
            bits: [3]
            access: ["R"]
          },
          COUNTER_BDR_IA: {
            bits: [4]
            access: ["R"]
          },
          FIFO_FULL_IA: {
            bits: [5]
            access: ["R"]
          },
          FIFO_OVR_IA: {
            bits: [6]
            access: ["R"]
          },
          FIFO_WTM_IA: {
            bits: [7]
            access: ["R"]
          }
        }
      }
    },

    ALL_INT_SRC: {
      Register: {
        adr: 29,
        always_write: {
          mask: 72,
          val: 0
        },
        fields: {
          FF_IA: {
            bits: [0]
            access: ["R"]
          },
          WU_IA: {
            bits: [1]
            access: ["R"]
          },
          TAP_IA: {
            bits: [2]
            access: ["R"]
          },
          D6D_IA: {
            bits: [4]
            access: ["R"]
          },
          SLEEP_CHANGE_IA: {
            bits: [5]
            access: ["R"]
          },
          EMB_FUNC_IA: {
            bits: [7]
            access: ["R"]
          }
        }
      }
    },

    STATUS_REG: {
      Register: {
        adr: 30,
        always_write: {
          mask: 112,
          val: 0
        },
        fields: {
          XLDA: {
            bits: [0]
            access: ["R"]
          },
          GDA: {
            bits: [1]
            access: ["R"]
          },
          TDA: {
            bits: [2]
            access: ["R"]
          },
          AH_QVARDA: {
            bits: [3]
            access: ["R"]
          },
          TIMESTAMP_ENDCOUNT: {
            bits: [7]
            access: ["R"]
          }
        }
      }
    },

    OUT_TEMP_L: {
      Register: {
        adr: 32,
        fields: {
          TEMP: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUT_TEMP_H: {
      Register: {
        adr: 33,
        fields: {
          TEMP: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTX_L_G: {
      Register: {
        adr: 34,
        fields: {
          OUTX_G: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTX_H_G: {
      Register: {
        adr: 35,
        fields: {
          OUTX_G: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTY_L_G: {
      Register: {
        adr: 36,
        fields: {
          OUTY_G: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTY_H_G: {
      Register: {
        adr: 37,
        fields: {
          OUTY_G: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTZ_L_G: {
      Register: {
        adr: 38,
        fields: {
          OUTZ_G: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTZ_H_G: {
      Register: {
        adr: 39,
        fields: {
          OUTZ_G: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTZ_L_A: {
      Register: {
        adr: 40,
        fields: {
          OUTZ_A: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTZ_H_A: {
      Register: {
        adr: 41,
        fields: {
          OUTZ_A: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTY_L_A: {
      Register: {
        adr: 42,
        fields: {
          OUTY_A: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTY_H_A: {
      Register: {
        adr: 43,
        fields: {
          OUTY_A: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTX_L_A: {
      Register: {
        adr: 44,
        fields: {
          OUTX_A: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    OUTX_H_A: {
      Register: {
        adr: 45,
        fields: {
          OUTX_A: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    UI_OUTZ_L_A_OIS_DUALC: {
      Register: {
        adr: 52,
        fields: {
          UI_OUTZ_A_OIS_DUALC: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    UI_OUTZ_H_A_OIS_DUALC: {
      Register: {
        adr: 53,
        fields: {
          UI_OUTZ_A_OIS_DUALC: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    UI_OUTY_L_A_OIS_DUALC: {
      Register: {
        adr: 54,
        fields: {
          UI_OUTY_A_OIS_DUALC: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    UI_OUTY_H_A_OIS_DUALC: {
      Register: {
        adr: 55,
        fields: {
          UI_OUTY_A_OIS_DUALC: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    UI_OUTX_L_A_OIS_DUALC: {
      Register: {
        adr: 56,
        fields: {
          UI_OUTX_A_OIS_DUALC: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    UI_OUTX_H_A_OIS_DUALC: {
      Register: {
        adr: 57,
        fields: {
          UI_OUTX_A_OIS_DUALC: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    AH_QVAR_OUT_L: {
      Register: {
        adr: 58,
        fields: {
          AH_QVAR: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    AH_QVAR_OUT_H: {
      Register: {
        adr: 59,
        fields: {
          AH_QVAR: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    TIMESTAMP0: {
      Register: {
        adr: 64,
        fields: {
          TIMESTAMP: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    TIMESTAMP1: {
      Register: {
        adr: 65,
        fields: {
          TIMESTAMP: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    TIMESTAMP2: {
      Register: {
        adr: 66,
        fields: {
          TIMESTAMP: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    TIMESTAMP3: {
      Register: {
        adr: 67,
        fields: {
          TIMESTAMP: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    WAKE_UP_SRC: {
      Register: {
        adr: 69,
        always_write: {
          mask: 128,
          val: 0
        },
        fields: {
          X_WU: {
            bits: [0]
            access: ["R"]
          },
          Y_WU: {
            bits: [1]
            access: ["R"]
          },
          Z_WU: {
            bits: [2]
            access: ["R"]
          },
          WU_IA: {
            bits: [3]
            access: ["R"]
          },
          SLEEP_STATE: {
            bits: [4]
            access: ["R"]
          },
          FF_IA: {
            bits: [5]
            access: ["R"]
          },
          SLEEP_CHANGE_IA: {
            bits: [6]
            access: ["R"]
          }
        }
      }
    },

    TAP_SRC: {
      Register: {
        adr: 70,
        always_write: {
          mask: 16,
          val: 0
        },
        fields: {
          X_TAP: {
            bits: [0]
            access: ["R"]
          },
          Y_TAP: {
            bits: [1]
            access: ["R"]
          },
          Z_TAP: {
            bits: [2]
            access: ["R"]
          },
          TAP_SIGN: {
            bits: [3]
            access: ["R"]
          },
          DOUBLE_TAP: {
            bits: [5]
            access: ["R"]
          },
          SINGLE_TAP: {
            bits: [6]
            access: ["R"]
          },
          TAP_IA: {
            bits: [7]
            access: ["R"]
          }
        }
      }
    },

    D6D_SRC: {
      Register: {
        adr: 71,
        always_write: {
          mask: 128,
          val: 0
        },
        fields: {
          ZL: {
            bits: [0]
            access: ["R"]
          },
          ZH: {
            bits: [1]
            access: ["R"]
          },
          YL: {
            bits: [2]
            access: ["R"]
          },
          YH: {
            bits: [3]
            access: ["R"]
          },
          XL: {
            bits: [4]
            access: ["R"]
          },
          XH: {
            bits: [5]
            access: ["R"]
          },
          D6D_IA: {
            bits: [6]
            access: ["R"]
          }
        }
      }
    },

    EMB_FUNC_STATUS_MAINPAGE: {
      Register: {
        adr: 73,
        always_write: {
          mask: 71,
          val: 0
        },
        fields: {
          IS_STEP_DET: {
            bits: [3]
            access: ["R"]
          },
          IS_TILT: {
            bits: [4]
            access: ["R"]
          },
          IS_SIGMOT: {
            bits: [5]
            access: ["R"]
          },
          IS_FSM_LC: {
            bits: [7]
            access: ["R"]
          }
        }
      }
    },

    FSM_STATUS_MAINPAGE: {
      Register: {
        adr: 74,
        fields: {
          IS_FSM1: {
            bits: [0]
            access: ["R"]
          },
          IS_FSM2: {
            bits: [1]
            access: ["R"]
          },
          IS_FSM3: {
            bits: [2]
            access: ["R"]
          },
          IS_FSM4: {
            bits: [3]
            access: ["R"]
          },
          IS_FSM5: {
            bits: [4]
            access: ["R"]
          },
          IS_FSM6: {
            bits: [5]
            access: ["R"]
          },
          IS_FSM7: {
            bits: [6]
            access: ["R"]
          },
          IS_FSM8: {
            bits: [7]
            access: ["R"]
          }
        }
      }
    },

    MLC_STATUS_MAINPAGE: {
      Register: {
        adr: 75,
        always_write: {
          mask: 240,
          val: 0
        },
        fields: {
          IS_MLC1: {
            bits: [0]
            access: ["R"]
          },
          IS_MLC2: {
            bits: [1]
            access: ["R"]
          },
          IS_MLC3: {
            bits: [2]
            access: ["R"]
          },
          IS_MLC4: {
            bits: [3]
            access: ["R"]
          }
        }
      }
    },

    INTERNAL_FREQ_FINE: {
      Register: {
        adr: 79,
        fields: {
          FREQ_FINE: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    FUNC_EN: {
      Register: {
        adr: 80,
        reset_val: 0,
        always_write: {
          mask: 52,
          val: 0
        },
        fields: {
          INACT_EN: {
            bits: ["1-0"]
            access: ["R", "W"]
          },
          DIS_RST_LIR_ALL_INT: {
            bits: [3]
            access: ["R", "W"]
          },
          TIMESTAMP_EN: {
            bits: [6]
            access: ["R", "W"]
          },
          INTERRUPTS_ENABLE: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    INACTIVITY_DUR: {
      Register: {
        adr: 84,
        reset_val: 4,
        fields: {
          INACT_DUR: {
            bits: ["1-0"]
            access: ["R", "W"]
          },
          XL_INACT_ODR: {
            bits: ["3-2"]
            access: ["R", "W"]
          },
          WU_INACT_THS_W: {
            bits: ["6-4"]
            access: ["R", "W"]
          },
          SLEEP_STATUS_ON_INT: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    INACTIVITY_THS: {
      Register: {
        adr: 85,
        reset_val: 0,
        always_write: {
          mask: 192,
          val: 0
        },
        fields: {
          INACT_THS: {
            bits: ["5-0"]
            access: ["R", "W"]
          }
        }
      }
    },

    TAP_CFG0: {
      Register: {
        adr: 86,
        reset_val: 0,
        always_write: {
          mask: 128,
          val: 0
        },
        fields: {
          LIR: {
            bits: [0]
            access: ["R", "W"]
          },
          TAP_X_EN: {
            bits: [1]
            access: ["R", "W"]
          },
          TAP_Y_EN: {
            bits: [2]
            access: ["R", "W"]
          },
          TAP_Z_EN: {
            bits: [3]
            access: ["R", "W"]
          },
          SLOPE_FDS: {
            bits: [4]
            access: ["R", "W"]
          },
          HW_FUNC_MASK_XL_SETTL: {
            bits: [5]
            access: ["R", "W"]
          },
          LOW_PASS_ON_6D: {
            bits: [6]
            access: ["R", "W"]
          }
        }
      }
    },

    TAP_CFG1: {
      Register: {
        adr: 87,
        reset_val: 0,
        fields: {
          TAP_THS_Z: {
            bits: ["4-0"]
            access: ["R", "W"]
          },
          TAP_PRIORITY: {
            bits: ["7-5"]
            access: ["R", "W"]
          }
        }
      }
    },

    TAP_CFG2: {
      Register: {
        adr: 88,
        reset_val: 0,
        always_write: {
          mask: 224,
          val: 0
        },
        fields: {
          TAP_THS_Y: {
            bits: ["4-0"]
            access: ["R", "W"]
          }
        }
      }
    },

    TAP_THS_6D: {
      Register: {
        adr: 89,
        reset_val: 0,
        always_write: {
          mask: 128,
          val: 0
        },
        fields: {
          TAP_THS_X: {
            bits: ["4-0"]
            access: ["R", "W"]
          },
          SIXD_THS: {
            bits: ["6-5"]
            access: ["R", "W"]
          }
        }
      }
    },

    TAP_DUR: {
      Register: {
        adr: 90,
        reset_val: 0,
        fields: {
          SHOCK: {
            bits: ["1-0"]
            access: ["R", "W"]
          },
          QUIET: {
            bits: ["3-2"]
            access: ["R", "W"]
          },
          DUR: {
            bits: ["7-4"]
            access: ["R", "W"]
          }
        }
      }
    },

    WAKE_UP_THS: {
      Register: {
        adr: 91,
        reset_val: 0,
        fields: {
          WK_THS: {
            bits: ["5-0"]
            access: ["R", "W"]
          },
          USR_OFF_ON_WU: {
            bits: [6]
            access: ["R", "W"]
          },
          SINGLE_DOUBLE_TAP: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    WAKE_UP_DUR: {
      Register: {
        adr: 92,
        reset_val: 0,
        always_write: {
          mask: 16,
          val: 0
        },
        fields: {
          SLEEP_DUR: {
            bits: ["3-0"]
            access: ["R", "W"]
          },
          WAKE_DUR: {
            bits: ["6-5"]
            access: ["R", "W"]
          },
          FF_DUR: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    FREE_FALL: {
      Register: {
        adr: 93,
        reset_val: 0,
        fields: {
          FF_THS: {
            bits: ["2-0"]
            access: ["R", "W"]
          },
          FF_DUR: {
            bits: ["7-3"]
            access: ["R", "W"]
          }
        }
      }
    },

    MD1_CFG: {
      Register: {
        adr: 94,
        reset_val: 0,
        always_write: {
          mask: 1,
          val: 0
        },
        fields: {
          INT1_EMB_FUNC: {
            bits: [1]
            access: ["R", "W"]
          },
          INT1_6D: {
            bits: [2]
            access: ["R", "W"]
          },
          INT1_DOUBLE_TAP: {
            bits: [3]
            access: ["R", "W"]
          },
          INT1_FF: {
            bits: [4]
            access: ["R", "W"]
          },
          INT1_WU: {
            bits: [5]
            access: ["R", "W"]
          },
          INT1_SINGLE_TAP: {
            bits: [6]
            access: ["R", "W"]
          },
          INT1_SLEEP_CHANGE: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    MD2_CFG: {
      Register: {
        adr: 95,
        reset_val: 0,
        fields: {
          INT2_TIMESTAMP: {
            bits: [0]
            access: ["R", "W"]
          },
          INT2_EMB_FUNC: {
            bits: [1]
            access: ["R", "W"]
          },
          INT2_6D: {
            bits: [2]
            access: ["R", "W"]
          },
          INT2_DOUBLE_TAP: {
            bits: [3]
            access: ["R", "W"]
          },
          INT2_FF: {
            bits: [4]
            access: ["R", "W"]
          },
          INT2_WU: {
            bits: [5]
            access: ["R", "W"]
          },
          INT2_SINGLE_TAP: {
            bits: [6]
            access: ["R", "W"]
          },
          INT2_SLEEP_CHANGE: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    EMB_FUNC_CFG: {
      Register: {
        adr: 99,
        reset_val: 0,
        always_write: {
          mask: 199,
          val: 0
        },
        fields: {
          EMB_FUNC_DISABLE: {
            bits: [3]
            access: ["R", "W"]
          },
          EMB_FUNC_IRQ_MASK_XL_SETTL: {
            bits: [4]
            access: ["R", "W"]
          },
          EMB_FUNC_IRQ_MASK_G_SETTL: {
            bits: [5]
            access: ["R", "W"]
          }
        }
      }
    },

    TDM_CFG0: {
      Register: {
        adr: 108,
        reset_val: 128,
        always_write: {
          mask: 136,
          val: 128
        },
        fields: {
          TDM_WCLK_BCLK_SEL: {
            bits: [0]
            access: ["R", "W"]
          },
          TDM_WCLK: {
            bits: ["2-1"]
            access: ["R", "W"]
          },
          TDM_SLOT_SEL: {
            bits: [4]
            access: ["R", "W"],
            brief: "Selection of TDM slot for transmission.",
            accepts: {
              LocalEnum: {
                SLOT123: {
                  val: 0,
                  brief: "Transmission during slot 1, 2, and 3."
                },
                SLOT456: {
                  val: 1,
                  brief: "Transmission during slot 4, 5, and 6."
                }
              }
            }
          },
          TDM_BCLK_EDGE_SEL: {
            bits: [5]
            access: ["R", "W"],
            brief: "TDM BCLK sampling edge selection.",
            accepts: {
              LocalEnum: {
                RISING: {
                  val: 0,
                  brief: "Sampling of BCLK falling edge."
                },
                FALLING: {
                  val: 1,
                  brief: "Sampling of BCLK rising edge."
                }
              }
            }
          },
          TDM_DELAYED_CFG: {
            bits: [6]
            access: ["R", "W"]
          }
        }
      }
    },

    TDM_CFG1: {
      Register: {
        adr: 109,
        reset_val: 224,
        always_write: {
          mask: 7,
          val: 0
        },
        fields: {
          TDM_AXES_ORD_SEL: {
            bits: ["4-3"]
            access: ["R", "W"],
            brief: "Selects the order of transmission of the TDM axes.",
            accepts: {
              LocalEnum: {
                ZYX: {
                  val: 0,
                  brief: "Axes transmitted in Z-Y-X order."
                },
                XZY: {
                  val: 1,
                  brief: "Axes transmitted in X-Z-Y order."
                },
                XYZ: {
                  val: 2,
                  brief: "Axes transmitted in X-Y-Z order."
                }
              }
            }
          },
          TDM_XL_Z_EN: {
            bits: [5]
            access: ["R", "W"]
          },
          TDM_XL_Y_EN: {
            bits: [6]
            access: ["R", "W"]
          },
          TDM_XL_X_EN: {
            bits: [7]
            access: ["R", "W"]
          }
        }
      }
    },

    TDM_CFG2: {
      Register: {
        adr: 110,
        reset_val: 1,
        always_write: {
          mask: 244,
          val: 0
        },
        fields: {
          TDM_FS_XL: {
            bits: ["1-0"]
            access: ["R", "W"],
            brief: "TDM channel accelerometer full-scale selection",
            accepts: {
              LocalEnum: {
                2G: {
                  val: 0,
                  brief: "±2 g"
                },
                4G: {
                  val: 1,
                  brief: "±4 g"
                },
                8G: {
                  val: 2,
                  brief: "±8 g"
                }
              }
            }
          },
          TDM_DATA_MASK: {
            bits: [3]
            access: ["R", "W"]
          }
        }
      }
    },

    Z_OFS_USR: {
      Register: {
        adr: 115,
        reset_val: 0,
        fields: {
          Z_OFS_USR: {
            bits: ["7-0"]
            access: ["R", "W"]
          }
        }
      }
    },

    Y_OFS_USR: {
      Register: {
        adr: 116,
        reset_val: 0,
        fields: {
          Y_OFS_USR: {
            bits: ["7-0"]
            access: ["R", "W"]
          }
        }
      }
    },

    X_OFS_USR: {
      Register: {
        adr: 117,
        reset_val: 0,
        fields: {
          X_OFS_USR: {
            bits: ["7-0"]
            access: ["R", "W"]
          }
        }
      }
    },

    FIFO_DATA_OUT_TAG: {
      Register: {
        adr: 120,
        always_write: {
          mask: 1,
          val: 0
        },
        fields: {
          TAG_CNT: {
            bits: ["2-1"]
            access: ["R"]
          },
          TAG_SENSOR: {
            bits: ["7-3"]
            access: ["R"],
            accepts: {
              LocalEnum: {
                FIFO_EMPTY: {
                  val: 0
                },
                GY_NC: {
                  val: 1
                },
                XL_NC: {
                  val: 2
                },
                TEMPERATURE: {
                  val: 3
                },
                TIMESTAMP: {
                  val: 4
                },
                CFG_CHANGE: {
                  val: 5
                },
                XL_NC_T_2: {
                  val: 6
                },
                XL_NC_T_1: {
                  val: 7
                },
                XL_2XC: {
                  val: 8
                },
                XL_3XC: {
                  val: 9
                },
                GY_NC_T_2: {
                  val: 10
                },
                GY_NC_T_1: {
                  val: 11
                },
                GY_2XC: {
                  val: 12
                },
                GY_3XC: {
                  val: 13
                },
                STEP_COUNTER: {
                  val: 18
                },
                SFLP_GAME_ROTATION_VECTOR: {
                  val: 19
                },
                SFLP_GYROSCOPE_BIAS: {
                  val: 22
                },
                SFLP_GRAVITY_VECTOR: {
                  val: 23
                },
                MLC_RESULT: {
                  val: 26
                },
                MLC_FILTER: {
                  val: 27
                },
                MLC_FEATURE: {
                  val: 28
                },
                XL_DUAL_CORE: {
                  val: 29
                },
                AH_QVAR: {
                  val: 31
                }
              }
            }
          }
        }
      }
    },

    FIFO_DATA_OUT_BYTE_0: {
      Register: {
        adr: 121,
        fields: {
          FIFO_DATA_OUT: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    FIFO_DATA_OUT_BYTE_1: {
      Register: {
        adr: 122,
        fields: {
          FIFO_DATA_OUT: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    FIFO_DATA_OUT_BYTE_2: {
      Register: {
        adr: 123,
        fields: {
          FIFO_DATA_OUT: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    FIFO_DATA_OUT_BYTE_3: {
      Register: {
        adr: 124,
        fields: {
          FIFO_DATA_OUT: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    FIFO_DATA_OUT_BYTE_4: {
      Register: {
        adr: 125,
        fields: {
          FIFO_DATA_OUT: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    },

    FIFO_DATA_OUT_BYTE_5: {
      Register: {
        adr: 126,
        fields: {
          FIFO_DATA_OUT: {
            bits: ["7-0"]
            access: ["R"]
          }
        }
      }
    }
  },

  enums: {
    BDR_GY_XL: {
      doc: null,
      brief: "Batch data rate (write frequency in FIFO) for accelerometer/gyroscope data.",
      enum: {
        1HZ875: {
          val: 1,
          brief: "1.875 Hz"
        },
        7HZ5: {
          val: 2,
          brief: "7.5 Hz"
        },
        15HZ: {
          val: 3,
          brief: "15 Hz"
        },
        30HZ: {
          val: 4,
          brief: "30 Hz"
        },
        60HZ: {
          val: 5,
          brief: "60 Hz"
        },
        120HZ: {
          val: 6,
          brief: "120 Hz"
        },
        240HZ: {
          val: 7,
          brief: "240 Hz"
        },
        480HZ: {
          val: 8,
          brief: "480 Hz"
        },
        960HZ: {
          val: 9,
          brief: "960 Hz"
        },
        1920HZ: {
          val: 10,
          brief: "1.92 kHz"
        },
        3840HZ: {
          val: 11,
          brief: "3.84 kHz"
        },
        7680HZ: {
          val: 12,
          brief: "7.68 kHz"
        }
      }
    }
  }
}
